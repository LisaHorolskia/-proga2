20.03-24.03
Виведіть всі прості числа від 0 і до 21. Для розв’язання задачі скористайтесь зразком та функцією, описаною у задачі 1.
#include <iostream>
using namespace std;

bool isPrime (int);

int main() {
  // int number;
  // Again:
  // cout << "Enter some number: ";
  // cin >> number;
  // if(isPrime(number)){
  //   cout << "Number " << number << " is Prime" << endl;
  // }else{
  //   cout << "Number " << number << " isn`t Prime" << endl;
  // }

  for(int i = 2; i<=21; i++){
    if(isPrime(i)){
      cout << i << " ";
      cout << endl;
    }
  }

  // goto Again;
}

bool isPrime(int n){
  for(int i = 2; i<10; i++){
    if(n%i==0){
      return false;
    }else{
      return true;
    }
  }
}


Ознайомтесь з поняття перевантажених функцій, оголошення перевантажених функцій, передання значень (аргументів) до перевантажених функцій.
Доповніть код у зразку так, щоб отримати вказану відповідь (приклад виведення).
Функції increment — перевантажені, та виконують наступне:
•	при виклику з одним аргументом (змінною int) збільшує змінну на 1;
•	при виклику з двома аргументами (змінною int і виразом int) збільшує змінну на значення виразу.


#include <iostream>
using namespace std;

int increment(int);
int increment(int,int);

int main() {
  int var;
  for(int i = 0; i < 10; i++){
    if(i % 2 == 0){
      var = increment(var);
    }else{
      var = increment(var, i);
    }
  }
  cout << var << endl;
  return 0;
}

int increment(int x){
  return x++;
}
int increment(int x, int i){
  return x+i;
}
